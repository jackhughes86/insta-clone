{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oPAiDeA,MA9Cf,WACE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKC,IAAI,sMACLC,IAAI,eACJF,UAAU,oBAGhB,yBAAKA,UAAU,aACX,4CACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QAAf,aACA,yBAAKA,UAAU,QAAf,iBACA,yBAAKA,UAAU,QAAf,kBAEF,yBAAKA,UAAU,QACb,sKAKR,yBAAKA,UAAU,YACb,yBAAKA,UAAU,SACb,yBAAKC,IAAI,4NACHC,IAAI,MAAMF,UAAU,WAG5B,yBAAKA,UAAU,SACb,yBAAKC,IAAI,4NACHC,IAAI,MAAMF,UAAU,WAG5B,yBAAKA,UAAU,SACb,yBAAKC,IAAI,4NACHC,IAAI,MAAMF,UAAU,cC3BhBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6e1984e9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-3 p-5\">\n          <img src=\"https://instagram.fkhi8-1.fna.fbcdn.net/vp/76983484dda67ae1c1b5addfd185ebda/5E038B38/t51.2885-19/s150x150/22709172_932712323559405_7810049005848625152_n.jpg?_nc_ht=instagram.fkhi8-1.fna.fbcdn.net\"\n              alt=\"freecodecamp\"\n              className=\"rounded-circle\"\n              />\n        </div>\n        <div className=\"col-9 p-5\">\n            <h3>freecodecamp</h3>\n            <div className=\"d-flex\">\n              <div className=\"pr-5\">208 posts</div>\n              <div className=\"pr-5\">30k followers</div>\n              <div className=\"pr-5\">229 following</div>\n            </div>\n            <div className=\"pt-4\">\n              <p>We're a global community of millions of people learning to code together. Were an open source, donor-supported, 501(c)(3) nonprofit.</p>\n            </div>\n        </div>\n      </div>\n\n      <div className=\"row pt-5\">\n        <div className=\"col-4\">\n          <img src=\"https://instagram.fkhi8-1.fna.fbcdn.net/vp/7fdb6f8c4c31b3ffa240669df19cab84/5E08FD34/t51.2885-15/e35/c94.0.561.561a/67737131_193841561646624_2063880671014995153_n.jpg?_nc_ht=instagram.fkhi8-1.fna.fbcdn.net&_nc_cat=100\"\n                alt=\"alp\" className=\"w-100\"\n            />\n        </div>\n        <div className=\"col-4\">\n          <img src=\"https://instagram.fkhi8-1.fna.fbcdn.net/vp/7fdb6f8c4c31b3ffa240669df19cab84/5E08FD34/t51.2885-15/e35/c94.0.561.561a/67737131_193841561646624_2063880671014995153_n.jpg?_nc_ht=instagram.fkhi8-1.fna.fbcdn.net&_nc_cat=100\"\n                alt=\"alp\" className=\"w-100\"\n            />\n        </div>\n        <div className=\"col-4\">\n          <img src=\"https://instagram.fkhi8-1.fna.fbcdn.net/vp/7fdb6f8c4c31b3ffa240669df19cab84/5E08FD34/t51.2885-15/e35/c94.0.561.561a/67737131_193841561646624_2063880671014995153_n.jpg?_nc_ht=instagram.fkhi8-1.fna.fbcdn.net&_nc_cat=100\"\n                alt=\"alp\" className=\"w-100\"\n            />\n        </div>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}